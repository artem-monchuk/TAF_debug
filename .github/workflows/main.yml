name: Pipeline

on:
  pull_request: #trigger on pull requests to the branch
    branches:
      - main
  schedule: #trigger by schedule at midnight
    - cron: "0 0 * * *"
  workflow_dispatch: #manually trigger the workflow
    inputs:
      browser:
        description: "Select browser to run UI tests against"
        required: true
        default: "chrome"
        type: string
        options:
          - chrome
          - firefox
          - edge

jobs:
  test-suite:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' 
      
      - name: Debug File Path
        run: |
          pwd
          ls -R . # List files and directories recursively
      
      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          
      #install Chrome Driver, Firefox Driver, Edge Driver dynamically based on input
      - name: Install Browser Drivers Dynamically
        run: |
          if [[ "${{ github.event.inputs.browser }}" == "chrome" ]]; then
            echo "Fetching latest ChromeDriver..."
            CHROME_VERSION=$(google-chrome --version | grep -oP "\d+\.\d+\.\d+" | head -1) # Get installed Chrome version
            CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1) # Extract major version (e.g., 115)
            DRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION}")
            wget "https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip"
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
          elif [[ "${{ github.event.inputs.browser }}" == "firefox" ]]; then
            echo "Fetching latest GeckoDriver..."
            DRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r ".tag_name" | sed 's/^v//')
            wget "https://github.com/mozilla/geckodriver/releases/download/v${DRIVER_VERSION}/geckodriver-v${DRIVER_VERSION}-linux64.tar.gz"
            tar -xvzf geckodriver-v${DRIVER_VERSION}-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/
          elif [[ "${{ github.event.inputs.browser }}" == "edge" ]]; then
            echo "Fetching latest EdgeDriver..."
            DRIVER_VERSION=$(curl -s https://msedgedriver.azureedge.net/LATEST_STABLE) # Get the latest stable version
            wget "https://msedgedriver.azureedge.net/${DRIVER_VERSION}/msedgedriver-linux64.zip"
            unzip msedgedriver-linux64.zip
            sudo mv msedgedriver /usr/local/bin/
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Run API Tests
        run: dotnet test --filter "Category=API" --logger "trx;LogFileName=api-tests.trx"
        continue-on-error: true #UI tests still run even if API tests fail

