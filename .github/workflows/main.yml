name: Pipeline

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser to run UI tests against"
        required: true
        default: "chrome"
        type: choice
        options:
          - chrome
          - firefox
          - edge

permissions:
  contents: read
  actions: read

jobs:
  test-suite:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libxi6

          if [ "${{ github.event.inputs.browser }}" == "chrome" ]; then
            echo "Installing Chrome..."
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version

          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            echo "Installing Firefox..."
            sudo apt-get install -y firefox
            wget https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
            tar -xvzf geckodriver-v0.30.0-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/geckodriver
            firefox --version

          elif [ "${{ github.event.inputs.browser }}" == "edge" ]; then
            echo "Installing Edge..."
            wget -q -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
            sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/
            sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-stable.list'
            sudo apt-get update
            sudo apt-get install -y microsoft-edge-stable
            microsoft-edge --version

            EDGE_VERSION=$(microsoft-edge --version | sed 's/Microsoft Edge //' | cut -d ' ' -f1)
            echo "Detected Edge version: $EDGE_VERSION"
            DRIVER_URL="https://msedgedriver.azureedge.net/LATEST_RELEASE_$EDGE_VERSION"
            MSEDGEDRIVER_VERSION=$(curl -s $DRIVER_URL | tr -d '\r\n')
            echo "Fetched msedgedriver version: $MSEDGEDRIVER_VERSION"
            wget "https://msedgedriver.azureedge.net/$MSEDGEDRIVER_VERSION/edgedriver_linux64.zip"
            unzip edgedriver_linux64.zip
            sudo mv msedgedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/msedgedriver
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore

      - name: Run API Tests
        run: dotnet test --filter "Category=API" --logger "trx;LogFileName=api-tests.trx"
        continue-on-error: true

      - name: Run UI Tests
        run: dotnet test --filter "Category!=API" --logger "trx;LogFileName=ui-tests.trx"

      - name: Upload UI Test Results
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: TestResults/ui-tests.trx

      - name: Upload API Test Results
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: TestResults/api-tests.trx

      - name: Upload Screenshots (if any)
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: Screenshots/
