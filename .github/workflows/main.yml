name: Pipeline

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser to run UI tests against"
        required: true
        default: "chrome"
        type: choice
        options:
          - chrome
          - firefox
          - edge

permissions:
  contents: read
  actions: read

jobs:
  test-suite:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libxi6

      - name: Set up chrome browser
        if: ${{ github.event.inputs.browser == 'chrome' }}
        uses: browser-actions/setup-chrome@v1

      - name: Set up firefox browser
        if: ${{ github.event.inputs.browser == 'firefox' }}
        uses: browser-actions/setup-firefox@v1

      - name: Set up edge browser
        if: ${{ github.event.inputs.browser == 'edge' }}
        uses: browser-actions/setup-edge@v1

      - name: Verify browser installation
        run: |
          if [ "${{ github.event.inputs.browser }}" == "chrome" ]; then
            google-chrome --version
            chromedriver --version
          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            firefox --version
            geckodriver --version
          elif [ "${{ github.event.inputs.browser }}" == "edge" ]; then
            microsoft-edge --version
            msedgedriver --version
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore

      - name: Run API Tests
        run: dotnet test --filter "Category=API" --logger "trx;LogFileName=api-tests.trx"
        continue-on-error: true

      - name: Run UI Tests
        run: dotnet test --filter "Category!=API" --logger "trx;LogFileName=ui-tests.trx"

      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: TestResults/ui-tests.trx

      - name: Upload API Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: TestResults/api-tests.trx

      - name: Upload Screenshots (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: Screenshots/
